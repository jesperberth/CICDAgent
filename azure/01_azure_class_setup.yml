---
- hosts: tag_type_devops
  vars_prompt:
    - name: account
      prompt: DevOps Account
      private: no

    - name: token
      prompt: Access Token
      private: no

    - name: pool
      prompt: Agent Pool
      private: no

  vars:
    ansible_python_interpreter: "auto"
    user: "{{ ansible_user_id }}"
    setup_devops: true
    setup_docker: false
    setup_ansible: false
    setup_azure: false

  tasks:
    - name: Install and Configure Azure DevOps Agent
      block:
        - name: Create Folder DevOpsAgent
          ansible.builtin.file:
            path: ~/DevOpsAgent
            state: directory

        - name: Download vsts-agent
          ansible.builtin.get_url:
            url: https://vstsagentpackage.azureedge.net/agent/2.190.0/vsts-agent-linux-x64-2.190.0.tar.gz
            dest: ~/DevOpsAgent/vsts-agent-linux-x64-2.190.0.tar.gz

        - name: Extract DevOpsAgent
          ansible.builtin.unarchive:
            src: ~/DevOpsAgent/vsts-agent-linux-x64-2.190.0.tar.gz
            dest: ~/DevOpsAgent
            remote_src: yes

        - name: Check if agent is installed
          stat:
            path: ~/DevOpsAgent/svc.sh
          register: svcfile

        - name: Configure DevOpsAgent
          shell: |
            /home/{{ user }}/DevOpsAgent/config.sh --unattended --url https://dev.azure.com/{{ account }} --auth pat --token {{ token }} --pool {{ pool }}  --acceptTeeEula
          when: not svcfile.stat.exists

        - name: Check if agent service is installed
          stat:
            path: /etc/systemd/system/vsts.agent.{{ account }}.{{ pool }}.{{ ansible_hostname }}.service
          register: servicefile

        - name: Configure DevOpsAgent as a Service
          shell: |
            cd /home/{{ user }}/DevOpsAgent
            ./svc.sh install
          become: yes
          when: not servicefile.stat.exists

        - name: Start vsts agent
          ansible.builtin.systemd:
            name: vsts.agent.{{ account }}.{{ pool }}.{{ ansible_hostname }}.service
            state: started
      when: setup_devops == true

    - name: Install and Configure Ansible
      block:
        - name: Install packages
          ansible.builtin.apt:
            name:
              - python3-pip
              - python3-winrm
            state: present
            update_cache: yes
          become: yes

        - name: Download azure requirements
          ansible.builtin.get_url:
            url: https://raw.githubusercontent.com/ansible-collections/azure/dev/requirements-azure.txt
            dest: ~/requirements-azure.txt

        - name: Install pip requirements azure
          ansible.builtin.pip:
            requirements: ~/requirements-azure.txt
      when: setup_ansible == true

    - name: Install and Configure Docker
      block:
        - name: Install packages
          ansible.builtin.apt:
            name:
              - docker.io
            state: present
            update_cache: yes
          become: yes

        - name: Allow User to run docker
          ansible.builtin.user:
            name: "{{ user }}"
            group: docker
          become: true
      when: setup_docker == true

    - name: Install and Configure Azure
      block:
        - name: Create Folder .azure
          ansible.builtin.file:
            path: ~/.azure
            state: directory
      when: setup_azure == true
